{"contracts": [{"name": "MetaCoin", "contract_type": "generic_contract", "JSON": {"contract": {"descriptor": {"name": "MetaCoin", "author": "Author Here", "language": "Solidity", "contract_type": "generic_contract", "contract_version": "1.0", "descriptor_version": "1.0", "abi": [{"constant": false, "inputs": [{"name": "addr", "type": "address"}], "name": "getBalanceInEth", "outputs": [{"name": "value", "type": "uint256"}], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": false, "inputs": [{"name": "receiver", "type": "address"}, {"name": "amount", "type": "uint256"}], "name": "sendCoin", "outputs": [{"name": "sufficient", "type": "bool"}], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": false, "inputs": [{"name": "addr", "type": "address"}], "name": "getBalance", "outputs": [{"name": "value", "type": "uint256"}], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "payable": false, "stateMutability": "nonpayable", "type": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "name": "_from", "type": "address"}, {"indexed": true, "name": "_to", "type": "address"}, {"indexed": false, "name": "_value", "type": "uint256"}], "name": "Transfer", "type": "event"}], "userdoc": {"methods": {"getBalance(address)": {"notice": "Returns MetaCoin balance for a given address"}, "getBalanceInEth(address)": {"notice": "Returns equivalent Ether balance for a given address"}, "sendCoin(address,uint256)": {"notice": "Transfer coins from sender to receiver"}}}}, "endpoint": {"address": "0x314159265dd8dbb310642f98f50c066173c1259b", "networkID": 1, "chainID": 1}, "dev": {"devdoc": {"author": "Author Here", "methods": {"getBalance(address)": {"return": "{ \"value\" : \"Token balance of account\" }"}, "getBalanceInEth(address)": {"details": "Uses the `ConvertLib.sol` library for conversions", "return": "{ \"value\" : \"Ether equivalent balance of account\" }"}, "sendCoin(address,uint256)": {"details": "This is just a simple example of a coin-like contract. It is not standards compatible and cannot be expected to talk to other coin/token contracts. If you want to create a standards-compliant token, see: [ConsenSys/Tokens](https://github.com/ConsenSys/Tokens). Cheers!", "return": "{ \"sufficient\": \"Transfer is succesful\" }"}}, "title": "MetaCoin Interface"}, "sources": {"contracts/ConvertLib.sol": {"keccak256": "0xf583c580ac981029f63ec3e39bd97b6955eb91241d6f066897268c12e3412b98", "urls": ["bzzr://d9a33154f48e2d75ec875dcaeff392fce12866a45855d04a3e4d0aaa7af9fe5b"]}, "contracts/MetaCoin.sol": {"keccak256": "0x2818d1d7dd6e6ec42772900c773786e294807d3ef404ef776e8311914179dd18", "urls": ["bzzr://a3a38f3d98c8545b322d2a753c30de89ae82b377873d65149ec956883b13b643"]}}, "libraries": {}, "compiler": {"version": "0.4.24+commit.e67f0147", "evmVersion": "byzantium"}}}}}, {"name": "Set", "contract_type": "library", "JSON": {"contract": {"descriptor": {"name": "Set", "author": "Unknown", "language": "Solidity", "contract_type": "library", "contract_version": "1.0", "descriptor_version": "1.0", "abi": [{"constant": false, "inputs": [{"name": "self", "type": "Set.Data storage"}, {"name": "value", "type": "uint256"}], "name": "remove", "outputs": [{"name": "", "type": "bool"}], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": true, "inputs": [{"name": "self", "type": "Set.Data storage"}, {"name": "value", "type": "uint256"}], "name": "contains", "outputs": [{"name": "", "type": "bool"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": false, "inputs": [{"name": "self", "type": "Set.Data storage"}, {"name": "value", "type": "uint256"}], "name": "insert", "outputs": [{"name": "", "type": "bool"}], "payable": false, "stateMutability": "nonpayable", "type": "function"}], "userdoc": {"methods": {}}}, "endpoint": {"address": "0x314159265dd8dbb310642f98f50c066173c1259b", "networkID": 1, "chainID": 1}, "dev": {"devdoc": {"methods": {}}, "sources": {"contracts/Set.sol": {"keccak256": "0xef39e446d16b4f599454fe120cd7345d3c8819c25da421de60e20d9c3efefb11", "urls": ["bzzr://71aa9deb4400e7201428d0715cbc343b778a14f7c50e6272ee4bd1d15a007fa4"]}}, "libraries": {}, "compiler": {"version": "0.4.24+commit.e67f0147", "evmVersion": "byzantium"}}}}}, {"name": "ConvertLib", "contract_type": "generic_contract", "JSON": {"contract": {"descriptor": {"name": "ConvertLib", "author": "Joe Bloggs", "language": "Solidity", "contract_type": "generic_contract", "contract_version": "1.0", "descriptor_version": "1.0", "abi": [{"constant": false, "inputs": [{"name": "amount", "type": "uint256"}, {"name": "conversionRate", "type": "uint256"}], "name": "convert", "outputs": [{"name": "convertedAmount", "type": "uint256"}], "payable": false, "stateMutability": "nonpayable", "type": "function"}], "userdoc": {"methods": {"convert(uint256,uint256)": {"notice": "Converts given value to Ether value"}}}}, "endpoint": {"address": "0x314159265dd8dbb310642f98f50c066173c1259b", "networkID": 1, "chainID": 1}, "dev": {"devdoc": {"author": "Joe Bloggs", "methods": {"convert(uint256,uint256)": {"return": "{ \"convertedAmount\" : \"Ether equivalent amount\" }"}}, "title": "Convert-o-matic 2000"}, "sources": {"contracts/ConvertLib.sol": {"keccak256": "0xf583c580ac981029f63ec3e39bd97b6955eb91241d6f066897268c12e3412b98", "urls": ["bzzr://d9a33154f48e2d75ec875dcaeff392fce12866a45855d04a3e4d0aaa7af9fe5b"]}}, "libraries": {}, "compiler": {"version": "0.4.24+commit.e67f0147", "evmVersion": "byzantium"}}}}}, {"name": "MyLib", "contract_type": "generic_contract", "JSON": {"contract": {"descriptor": {"name": "MyLib", "author": "Gav Wouldn't", "language": "Solidity", "contract_type": "generic_contract", "contract_version": "1.0", "descriptor_version": "1.0", "abi": [{"constant": false, "inputs": [{"name": "amount", "type": "uint256"}, {"name": "conversionRate", "type": "uint256"}], "name": "convert", "outputs": [{"name": "convertedAmount", "type": "uint256"}], "payable": false, "stateMutability": "nonpayable", "type": "function"}], "userdoc": {"methods": {"convert(uint256,uint256)": {"notice": "Converts given value to Ether value"}}}}, "endpoint": {"address": "0x314159265dd8dbb310642f98f50c066173c1259b", "networkID": 1, "chainID": 1}, "dev": {"devdoc": {"author": "Gav Wouldn't", "methods": {"convert(uint256,uint256)": {"return": "{ \"convertedAmount\" : \"Ether equivalent amount\" }"}}, "title": "Some Other Library"}, "sources": {"contracts/My_other_lib.sol": {"keccak256": "0xbe468f4d111cd6cb5690a89fbc45b6716f809a26e0b96c305d734ec91516ff6a", "urls": ["bzzr://aa8420283df9f1626eb1cc26f03f0a262ac890a51fbb673e4642adb60c47b8b5"]}}, "libraries": {}, "compiler": {"version": "0.4.24+commit.e67f0147", "evmVersion": "byzantium"}}}}}]}